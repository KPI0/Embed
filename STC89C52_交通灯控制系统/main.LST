C51 COMPILER V9.52.0.0   MAIN                                                              11/02/2022 14:39:21 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil_vn\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg52.h>           //调用单片机头文件
   2          #define uchar unsigned char   //宏定义"uchar"代替"unsigned char"
   3          #define uint  unsigned int    //宏定义"uint"用来定义无符号整型数
   4          
   5          //数码管段选定义 0     1    2    3    4    5  6  7    8    9  
   6          uchar code smg_du[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
   7          //             A  B  C    D    E   F  不显示
   8                     0x88,0x83,0xc6,0xa1,0x86,0x8e,0xff};  //?? 
   9          
  10          uchar dis_smg[8] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8}; 
  11          uchar smg_i = 2;    //显示数码管的个位数
  12          
  13          //数码管位选定义
  14          sbit smg_we1 = P2^0;      //数码管位选定义
  15          sbit smg_we2 = P2^1;
  16          sbit smg_we3 = P3^6;
  17          sbit smg_we4 = P3^7;
  18          
  19          char dx_s = 0;  //东西  南北 倒计时变量
  20          sbit dx_red    = P2^4;    //东西红灯
  21          sbit dx_green  = P2^3;    //东西绿灯
  22          sbit dx_yellow = P2^2;    //东西黄灯
  23          
  24          sbit nb_red    = P2^7;    //南北红灯
  25          sbit nb_green  = P2^6;    //南北绿灯
  26          sbit nb_yellow = P2^5;    //南北黄灯  
  27          
  28          uchar flag_jtd_mode;  //交通灯的模式 根据时间
  29          bit flag_1s = 0;
  30          bit flag_500ms;
  31          bit flag_dx_nb;    //东西南北模式
  32          uchar flag_5m_value;
  33          uchar i;
  34          uchar flag_alarm; //模式
  35          uchar dx_time = 30,nb_time = 20;   //东西、南北模式
  36          uchar flag_jdgz ;     //交通管制
  37          
  38          /*数码管位选函数*/
  39          void smg_we_switch(uchar i)
  40          {
  41   1        switch(i)
  42   1        {
  43   2          case 0: smg_we1 = 0;  smg_we2 = 1; smg_we3 = 1;  smg_we4 = 0; break;
  44   2          case 1: smg_we1 = 1;  smg_we2 = 0; smg_we3 = 0;  smg_we4 = 1; break;
  45   2          case 2: smg_we1 = 1;  smg_we2 = 1; smg_we3 = 0;  smg_we4 = 1; break;
  46   2          case 3: smg_we1 = 1;  smg_we2 = 1; smg_we3 = 1;  smg_we4 = 0; break;
  47   2        } 
  48   1      }
  49          
  50          /********************************************************************
  51          * 名称 : delay_1ms()
  52          * 功能 : 延时1ms函数
  53          * 输入 : q
  54          * 输出 : 无
  55          ***********************************************************************/
C51 COMPILER V9.52.0.0   MAIN                                                              11/02/2022 14:39:21 PAGE 2   

  56          void delay_1ms(uint q)
  57          {
  58   1        uint i,j;
  59   1        for(i=0;i<q;i++)
  60   1          for(j=0;j<110;j++);
  61   1      }
  62          
  63          /********************************************************************
  64          * 名称 : display()
  65          * 功能 : 数码管显示
  66          * 输入 : 无
  67          * 输出 : 无
  68          ***********************************************************************/
  69          void display()
  70          {
  71   1        uchar i;
  72   1        for(i=0;i<smg_i;i++)
  73   1        {   
  74   2          P0 = 0xff;          //消隐
  75   2          smg_we_switch(i);   //位选
  76   2          P0 = dis_smg[i];    //段选
  77   2          delay_1ms(3);
  78   2        }
  79   1      }
  80          
  81          /*定时器0,、定时器1初始化*/
  82          void time0_init()   
  83          {
  84   1        EA  = 1;      //开关中断
  85   1        TMOD = 0X11;  //定时器0定时器1工作方式1
  86   1        ET0 = 1;      //开定时器0中断
  87   1        TR0 = 1;      //允许定时器0定时
  88   1      //  ET1 = 1;    //开定时器1中断
  89   1      //  TR1 = 1;    //允许定时器1定时
  90   1      }
  91          
  92          /*交通灯处理函数*/
  93          void jiaotongdeng_dis()
  94          {
  95   1        if(flag_1s == 1)
  96   1        {
  97   2          flag_1s = 0;
  98   2          if(dx_s == 0)
  99   2          {
 100   3            if(flag_dx_nb == 1)
 101   3              dx_s = nb_time;   //南北时间
 102   3            else 
 103   3              dx_s = dx_time;   //东西时间
 104   3            flag_dx_nb = ~flag_dx_nb;
 105   3          }
 106   2          dx_s --;
 107   2        }
 108   1        dis_smg[0] = smg_du[dx_s % 10] ;
 109   1        dis_smg[1] = smg_du[dx_s / 10] ;
 110   1        
 111   1        dis_smg[2] = smg_du[dx_s % 10] ;
 112   1        dis_smg[3] = smg_du[dx_s / 10] ;
 113   1      
 114   1      /*南北时间*/
 115   1          if(flag_dx_nb == 0)  
 116   1          {
 117   2            if(dx_s > 5)
C51 COMPILER V9.52.0.0   MAIN                                                              11/02/2022 14:39:21 PAGE 3   

 118   2            {
 119   3              dx_red    = 1;  //灭
 120   3              dx_green  = 0;  //亮
 121   3              dx_yellow = 1;  //灭
 122   3              nb_red    = 0;  //亮
 123   3              nb_green  = 1;  //灭
 124   3              nb_yellow = 1;  //灭
 125   3              flag_5m_value = 0;  
 126   3            }else if(dx_s <= 5)    //当小于5秒时 黄灯闪烁
 127   2            {
 128   3              dx_red    = 1;    //灭
 129   3              dx_green  = 1;    //灭
 130   3              nb_red    = 0;    //亮
 131   3              nb_green  = 1;    //灭
 132   3              nb_yellow = 1;    //灭
 133   3              if(flag_500ms == 0)
 134   3              {
 135   4                dx_yellow = 0;//亮
 136   4              }
 137   3              else 
 138   3              {
 139   4                dx_yellow = 1;//灭
 140   4              }
 141   3            }
 142   2          }
 143   1      /*东西时间*/
 144   1          if(flag_dx_nb == 1)  
 145   1          {
 146   2            if(dx_s > 5)
 147   2            {
 148   3              dx_red    = 0;     //亮
 149   3              dx_green  = 1;     //灭
 150   3              dx_yellow = 1;     //灭
 151   3              nb_red    = 1;     //灭
 152   3              nb_green  = 0;     //亮
 153   3              nb_yellow = 1;     //灭
 154   3              flag_5m_value = 0;  
 155   3            }else if(dx_s <= 5)    //当小于5秒时  黄灯闪烁
 156   2            {
 157   3              dx_red    = 0;     //灭
 158   3              dx_green  = 1;     //灭
 159   3              dx_yellow = 1;     //灭
 160   3              nb_red    = 1;     //灭
 161   3              nb_green  = 1;     //灭
 162   3              if(flag_500ms == 0)    //黄灯闪烁
 163   3              {
 164   4                nb_yellow = 0;  //亮
 165   4              }
 166   3              else 
 167   3              {
 168   4                nb_yellow = 1;  //灭
 169   4              }
 170   3            }
 171   2        }     
 172   1      }
 173          
 174          /*独立按键程序*/
 175          uchar key_can;   //按键值
 176          
 177          void key()   //独立按键程序
 178          {
 179   1        static uchar key_new;
C51 COMPILER V9.52.0.0   MAIN                                                              11/02/2022 14:39:21 PAGE 4   

 180   1        key_can = 20;                   //按键值还原
 181   1        P1 |= 0x1f;
 182   1        if((P1 & 0x1f) != 0x1f)   //按键按下
 183   1        {
 184   2          delay_1ms(1);       //按键消抖
 185   2          if(((P1 & 0x1f) != 0x1f) && (key_new == 1))
 186   2          {           //确认是按键按下
 187   3            key_new = 0;
 188   3            switch(P1 & 0x1f)
 189   3            {
 190   4              case 0x1e:  key_can = 1;  break;   //得到按键值
 191   4              case 0x1d:  key_can = 2;  break;   //得到按键值
 192   4              case 0x1b:  key_can = 3;  break;   //得到按键值
 193   4              case 0x17:  key_can = 4;  break;   //得到按键值
 194   4            }
 195   3          }     
 196   2        }
 197   1        else 
 198   1          key_new = 1;  
 199   1      }
 200          
 201          uchar menu_1,flag_s;
 202          
 203          /*设置函数*/
 204          void key_with()
 205          {
 206   1        if(key_can == 4)   //交通管制按键
 207   1        {
 208   2          flag_jdgz ++;
 209   2          if(flag_jdgz > 5)
 210   2            flag_jdgz = 0;  
 211   2          if(flag_jdgz == 1)   //  全部亮红灯 
 212   2          {
 213   3            dx_red    = 0;  //亮
 214   3            dx_green  = 1;  //灭
 215   3            dx_yellow = 1;  //灭
 216   3            nb_red    = 0;  //亮
 217   3            nb_green  = 1;  //灭
 218   3            nb_yellow = 1;  //灭    
 219   3          }
 220   2          if(flag_jdgz == 2)   //  东西红灯  南北绿灯
 221   2          {
 222   3            dx_red    = 0;  //亮
 223   3            dx_green  = 1;  //灭
 224   3            dx_yellow = 1;  //灭
 225   3            nb_red    = 1;  //灭
 226   3            nb_green  = 0;  //亮
 227   3            nb_yellow = 1;  //灭    
 228   3          }
 229   2          if(flag_jdgz == 3)   //  南北红灯  东西绿灯
 230   2          {
 231   3            dx_red    = 1;  //灭
 232   3            dx_green  = 0;  //亮
 233   3            dx_yellow = 1;  //灭
 234   3            nb_red    = 0;  //亮
 235   3            nb_green  = 1;  //灭
 236   3            nb_yellow = 1;  //灭    
 237   3          }
 238   2          if(flag_jdgz == 4)   //  南北绿灯  东西绿灯
 239   2          {
 240   3            dx_red    = 1;  //灭
 241   3            dx_green  = 0;  //亮
C51 COMPILER V9.52.0.0   MAIN                                                              11/02/2022 14:39:21 PAGE 5   

 242   3            dx_yellow = 1;  //灭
 243   3            nb_red    = 1;  //灭
 244   3            nb_green  = 0;  //亮
 245   3            nb_yellow = 1;  //灭    
 246   3          }
 247   2          if(flag_jdgz == 5)   //  南北黄灯  东西黄灯
 248   2          {
 249   3            dx_red    = 1;  //灭
 250   3            dx_green  = 1;  //灭
 251   3            dx_yellow = 0;  //亮
 252   3            nb_red    = 1;  //灭
 253   3            nb_green  = 1;  //灭
 254   3            nb_yellow = 0;  //亮    
 255   3          }
 256   2        }
 257   1        if(key_can == 1)    //设置键
 258   1        {
 259   2          menu_1 ++;
 260   2          if(menu_1 >= 3)
 261   2          {
 262   3            menu_1  = 0;
 263   3          }
 264   2        }
 265   1      
 266   1        if(menu_1 == 1)    //设置东西的时间
 267   1        {
 268   2          if(key_can == 2)
 269   2          {
 270   3            dx_time ++ ;    //加1
 271   3            if(dx_time > 99)
 272   3              dx_time = 99;
 273   3          }
 274   2          if(key_can == 3)
 275   2          {
 276   3            dx_time -- ;    //减1
 277   3            if(dx_time <= 10)
 278   3              dx_time = 10;
 279   3          }
 280   2      //    dis_smg[0] = smg_du[10] ; //显示为A
 281   2      //    dis_smg[1] = smg_du[10] ; //显示为A
 282   2          dis_smg[2] = smg_du[dx_time % 10] ;   //显示东西设置的时间
 283   2          dis_smg[3] = smg_du[dx_time / 10] ; 
 284   2        } 
 285   1        if(menu_1 == 2)    //设置南北时间
 286   1        {
 287   2          if(key_can == 2)
 288   2          {
 289   3            nb_time ++ ;    //加1
 290   3            if(nb_time > 99)
 291   3              nb_time = 99;
 292   3          }
 293   2          if(key_can == 3)
 294   2          {
 295   3            nb_time -- ;    //减1
 296   3            if(nb_time <= 10)
 297   3              nb_time = 10;
 298   3          }
 299   2      //    dis_smg[0] = smg_du[11] ; //显示为B
 300   2      //    dis_smg[1] = smg_du[11] ; //显示为B
 301   2          dis_smg[2] = smg_du[nb_time % 10] ;   //显示东西设置的时候
 302   2          dis_smg[3] = smg_du[nb_time / 10] ; 
 303   2        }
C51 COMPILER V9.52.0.0   MAIN                                                              11/02/2022 14:39:21 PAGE 6   

 304   1      }
 305          
 306          /********************************************************************
 307          * 名称 : main()
 308          * 功能 : 实现灯的闪烁
 309          * 输入 : 无
 310          * 输出 : 无
 311          ***********************************************************************/
 312          void main()
 313          {
 314   1        time0_init();
 315   1        dx_s = nb_time;   //东西时间
 316   1        while(1)
 317   1        {
 318   2          key();
 319   2          if(key_can < 20)
 320   2            key_with();
 321   2      //    menu_dis();
 322   2          if((menu_1 == 0) && (flag_jdgz == 0))
 323   2            jiaotongdeng_dis();
 324   2          display();  
 325   2        }
 326   1      }  
 327          
 328          /*定时器0中断服务程序*/
 329          void time0_int() interrupt 1  
 330          {              
 331   1        static uchar value;      //定时10ms中断一次
 332   1        TH0 = 0x3c;
 333   1        TL0 = 0xb0;     //50ms
 334   1        value ++;
 335   1        flag_5m_value++;
 336   1        if(flag_5m_value % 10 == 0)
 337   1          flag_500ms = ~flag_500ms;
 338   1        if(value >= 20)
 339   1        {
 340   2          value = 0;
 341   2          flag_1s = 1;
 342   2        }
 343   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    721    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
